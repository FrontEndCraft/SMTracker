{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HP/Desktop/SMTracker/Angular/StockTracker-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"exchangeRateChartCanvas\"];\n\nfunction ConvertorComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 48)(2, \"div\", 49)(3, \"div\", 50)(4, \"h1\");\n    i0.ɵɵtext(5, \"Currency Converter Dashboard\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\n\nfunction ConvertorComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51)(1, \"div\", 9)(2, \"div\", 52)(3, \"div\", 53)(4, \"div\", 54)(5, \"span\", 55);\n    i0.ɵɵtext(6, \"Exchange Rate Monitor and Currency Converter Dashboard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 56);\n    i0.ɵɵtext(8, \"USD Pair\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(9, \"div\", 57);\n    i0.ɵɵelementEnd()()()();\n  }\n} //import { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\n\nexport class ConvertorComponent {\n  constructor(http, formBuilder, cdr) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.cdr = cdr;\n    this.isShowHeader = true;\n  }\n\n  ngOnInit() {\n    this.convertorForm = this.formBuilder.group({\n      sourceCurrency: ['USD'],\n      destinationCurrency: ['USD'],\n      amount: ['']\n    });\n    this.fetchCurrencyRates().then(currencyRates => {\n      this.initCurrencyDropdowns(currencyRates);\n    });\n    this.updateTable();\n  }\n\n  IsShowHeader(item) {\n    this.isShowHeader = item;\n  }\n\n  ngAfterViewInit() {\n    this.updateChart();\n    this.cdr.detectChanges();\n  }\n\n  fetchCurrencyRates() {\n    const apiKey = '2d60540e9c37102c0f5d56ac';\n    const baseCurrency = 'USD';\n    const apiUrl = `https://v6.exchangerate-api.com/v6/${apiKey}/latest/${baseCurrency}`;\n    return this.http.get(apiUrl).toPromise().then(data => {\n      if (data.result === 'success') {\n        return data.conversion_rates;\n      } else {\n        console.error('API Error:', data['error-type']);\n        return {};\n      }\n    }).catch(error => {\n      console.error('Fetch Error:', error);\n      return {};\n    });\n  }\n\n  initCurrencyDropdowns(currencyRates) {\n    const currencyCodes = Object.keys(currencyRates);\n    this.sourceCurrencySelect = document.getElementById('sourceCurrency');\n    this.destinationCurrencySelect = document.getElementById('destinationCurrency');\n\n    for (const currencyCode of currencyCodes) {\n      const option = document.createElement('option');\n      option.value = currencyCode;\n      option.textContent = currencyCode.toUpperCase();\n      this.sourceCurrencySelect?.appendChild(option);\n      this.destinationCurrencySelect?.appendChild(option.cloneNode(true));\n    } // Fill the dropdown menu with currency options for the chart\n\n\n    const currencyPairSelect = document.getElementById('currencyPairSelect');\n\n    for (const currency of currencyCodes) {\n      const option = document.createElement('option');\n      option.value = currency;\n      option.textContent = currency.toUpperCase();\n      currencyPairSelect.appendChild(option);\n    } // Get the default selected currency pairs for the chart\n\n\n    const defaultSelectedCurrencies = ['eur', 'gbp', 'jpy', 'aud', 'cad', 'chf', 'cny', 'sek', 'nzd', 'mxn', 'sgd', 'hkd', 'nok', 'krw', 'try']; // Split the default selected currencies and set them as selected in the currencyPairSelect element\n\n    defaultSelectedCurrencies.forEach(currency => {\n      const option = currencyPairSelect.querySelector(`option[value=\"${currency}\"]`);\n\n      if (option) {\n        option.selected = true;\n      }\n    }); // Update the chart on DOM load\n\n    this.updateChart();\n  }\n\n  convertCurrency() {\n    const sourceCurrency = this.convertorForm.controls['sourceCurrency'].value;\n    const destinationCurrency = this.convertorForm.controls['destinationCurrency'].value;\n    const amount = parseFloat(this.convertorForm.controls['amount'].value);\n\n    if (!isNaN(amount)) {\n      this.fetchCurrencyRates().then(currencyRates => {\n        const convertedAmount = this.calculateConvertedAmount(amount, sourceCurrency, destinationCurrency, currencyRates);\n        this.convertedAmount = `${amount} ${sourceCurrency.toUpperCase()} = ${convertedAmount.toFixed(2)} ${destinationCurrency.toUpperCase()}`;\n      });\n    } else {\n      alert('Please enter a valid amount.');\n    }\n  }\n\n  calculateConvertedAmount(amount, sourceCurrency, destinationCurrency, currencyRates) {\n    const baseCurrency = 'USD';\n\n    if (sourceCurrency === baseCurrency) {\n      return amount * currencyRates[destinationCurrency];\n    } else if (destinationCurrency === baseCurrency) {\n      return amount / currencyRates[sourceCurrency];\n    } else {\n      return amount / currencyRates[sourceCurrency] * currencyRates[destinationCurrency];\n    }\n  }\n\n  generateRandomColors(count) {\n    const colors = [];\n\n    for (let i = 0; i < count; i++) {\n      const color = `rgba(${this.getRandomNumber(0, 255)}, ${this.getRandomNumber(0, 255)}, ${this.getRandomNumber(0, 255)}, 0.7)`;\n      colors.push(color);\n    }\n\n    return colors;\n  }\n\n  getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  updateChart() {\n    Chart.register(...registerables);\n    const currencyPairSelect = document.getElementById('currencyPairSelect');\n    const selectedOptions = currencyPairSelect.selectedOptions;\n    const selectedCurrencies = Array.from(selectedOptions).map(option => option.value);\n    this.fetchCurrencyRates().then(currencyRates => {\n      // Get the selected currency pairs and their exchange rates\n      const labels = selectedCurrencies.map(currency => currency.toUpperCase());\n      const exchangeRates = selectedCurrencies.map(currency => currencyRates[currency]); // Create the chart or update the existing one\n      //  const ctx = this.exchangeRateChartCanvas.nativeElement.getContext('2d');\n\n      if (this.chart) {\n        this.chart.data.labels = labels;\n        this.chart.data.datasets[0].data = exchangeRates;\n        this.chart.data.datasets[0].backgroundColor = this.generateRandomColors(selectedCurrencies.length);\n        this.chart.update();\n      } else {\n        const colors = this.generateRandomColors(labels.length);\n        this.chart = new Chart(this.exchangeRateChartCanvas?.nativeElement, {\n          type: 'bar',\n          data: {\n            labels: labels,\n            datasets: [{\n              label: 'Exchange Rates',\n              data: exchangeRates,\n              backgroundColor: colors,\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                type: 'linear',\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  updateTable() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const apiKey = '2d60540e9c37102c0f5d56ac';\n      const baseCurrency = 'USD';\n      const apiUrl = `https://v6.exchangerate-api.com/v6/${apiKey}/latest/${baseCurrency}`;\n\n      try {\n        const response = yield fetch(apiUrl);\n        const data = yield response.json();\n\n        if (data.result === 'success') {\n          const rates = data.conversion_rates;\n          _this.tableBody = document.getElementById('exchangeRateTable'); // Clear existing table data\n\n          _this.tableBody.innerHTML = ''; // Loop through all currency pairs and add rows to the table\n\n          for (const currency in rates) {\n            const exchangeRate = rates[currency];\n            const row = document.createElement('tr');\n            const currencyPairCell = document.createElement('td');\n            const exchangeRateCell = document.createElement('td');\n            currencyPairCell.textContent = `USD/${currency}`;\n            exchangeRateCell.textContent = exchangeRate.toFixed(4);\n            row.appendChild(currencyPairCell);\n            row.appendChild(exchangeRateCell);\n\n            _this.tableBody.appendChild(row);\n          }\n        } else {\n          console.error('API Error:', data['error-type']);\n        }\n      } catch (error) {\n        console.error('Fetch Error:', error);\n      }\n    })();\n  }\n\n  onChangeSourceCurrency() {\n    this.convertCurrency();\n  }\n\n  onChangeDestinationCurrency() {\n    this.convertCurrency();\n  }\n\n}\n\nConvertorComponent.ɵfac = function ConvertorComponent_Factory(t) {\n  return new (t || ConvertorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nConvertorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConvertorComponent,\n  selectors: [[\"app-convertor\"]],\n  viewQuery: function ConvertorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.exchangeRateChartCanvas = _t.first);\n    }\n  },\n  inputs: {\n    isShowHeader: \"isShowHeader\"\n  },\n  decls: 112,\n  vars: 4,\n  consts: [[\"novalidate\", \"\", 1, \"form-horizontal\", 3, \"formGroup\"], [\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"row crypto-currency\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\", \"card-statistics\"], [1, \"card-header\"], [1, \"card-heading\"], [1, \"card-title\", 2, \"text-align\", \"center\"], [1, \"col-12\"], [1, \"card\", \"card-statistics\", \"mail-contant\"], [1, \"card-body\", \"p-0\"], [1, \"row\", \"no-gutters\"], [1, \"col-md-3\", \"col-xxl-2\", \"col-md-3\"], [1, \"mail-sidebar\"], [1, \"row\", \"justify-content-center\"], [1, \"text-center\", \"mail-sidebar-title\", \"px-4\"], [1, \"fa\", \"fa-money\", \"pl-2\"], [1, \"px-4\", \"py-4\"], [1, \"dropdown\"], [\"id\", \"sourceCurrency\", \"formControlName\", \"sourceCurrency\", 1, \"form-control\", 3, \"change\"], [1, \"form-group\"], [\"type\", \"Number\", \"id\", \"amount\", \"min\", \"0\", \"step\", \"0.01\", \"placeholder\", \"Enter Amount\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"id\", \"destinationCurrency\", \"formControlName\", \"destinationCurrency\", 1, \"form-control\", 3, \"change\"], [1, \"px-4\", \"py-4\", 2, \"text-align\", \"center\", \"margin-top\", \"30px\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\", \"card-statistics\", \"h-100\", \"m-b-0\"], [1, \"card-header\", \"bg-gradient\"], [1, \"row\", \"align-items-center\", 2, \"justify-content\", \"center\"], [\"id\", \"convertedAmount\", 2, \"color\", \"white\"], [1, \"col-xxl-4\", \"m-b-30\"], [1, \"card\", \"card-statistics\", \"h-100\", \"mb-0\"], [1, \"card-header\", \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"card-title\"], [1, \"card-body\", \"scrollbar\", \"scroll_dark\", \"pt-0\"], [1, \"datatable-wrapper\", \"table-responsive\", 2, \"max-height\", \"450px\", \"margin-top\", \"10px\"], [\"id\", \"export-table\", 1, \"table\", \"table-bordered\"], [1, \"thead-light\"], [\"id\", \"exchangeRateTable\"], [1, \"col-xxl-8\", \"m-b-30\"], [1, \"card-body\"], [1, \"col-6\"], [\"for\", \"currencyPairSelect\"], [\"id\", \"currencyPairSelect\", \"multiple\", \"\", 1, \"form-control\", 2, \"width\", \"300px\"], [1, \"col-6\", 2, \"margin-bottom\", \"0\"], [1, \"row\", 2, \"width\", \"100%\", \"margin-top\", \"20px\"], [\"id\", \"exchangeRateChartCanvas\", \"width\", \"600\", \"height\", \"300\"], [\"exchangeRateChartCanvas\", \"\"], [1, \"col-md-12\", \"m-b-30\"], [1, \"d-block\", \"d-sm-flex\", \"flex-nowrap\", \"align-items-center\"], [1, \"page-title\", \"mb-2\", \"mb-sm-0\"], [1, \"row\", \"crypto-currency\"], [1, \"card\", \"card-statistics\", \"p-0\", \"owl-wrapper\"], [1, \"row\", \"align-items-center\", \"no-gutters\"], [1, \"col-xs-12\", \"text-center\", \"text-xxl-left\", \"bg-primary\", \"px-3\", \"py-3\", 2, \"text-align\", \"center\"], [1, \"text-white\"], [1, \"badge\", \"badge-light-inverse\", \"ml-xxl-4\"], [1, \"col-xs-1\", \"py-3\", \"py-xs-0\"]],\n  template: function ConvertorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtemplate(1, ConvertorComponent_div_1_Template, 6, 0, \"div\", 1);\n      i0.ɵɵtemplate(2, ConvertorComponent_div_2_Template, 10, 0, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"h4\", 8);\n      i0.ɵɵtext(9, \"Currency Converter\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11)(14, \"div\", 12)(15, \"div\", 13)(16, \"div\", 14)(17, \"div\", 15)(18, \"div\", 9)(19, \"div\", 16);\n      i0.ɵɵtext(20, \" Source Currency\");\n      i0.ɵɵelement(21, \"i\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 18)(24, \"div\", 19)(25, \"select\", 20);\n      i0.ɵɵlistener(\"change\", function ConvertorComponent_Template_select_change_25_listener() {\n        return ctx.onChangeSourceCurrency();\n      });\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(26, \"div\", 13)(27, \"div\", 14)(28, \"div\", 15)(29, \"div\", 9)(30, \"div\", 16);\n      i0.ɵɵtext(31, \" Amount \");\n      i0.ɵɵelement(32, \"i\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 9)(34, \"div\", 18)(35, \"div\", 21);\n      i0.ɵɵelement(36, \"input\", 22);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(37, \"div\", 13)(38, \"div\", 14)(39, \"div\", 15)(40, \"div\", 9)(41, \"div\", 16);\n      i0.ɵɵtext(42, \" Target Currency \");\n      i0.ɵɵelement(43, \"i\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 9)(45, \"div\", 18)(46, \"div\", 19)(47, \"select\", 23);\n      i0.ɵɵlistener(\"change\", function ConvertorComponent_Template_select_change_47_listener() {\n        return ctx.onChangeDestinationCurrency();\n      });\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(48, \"div\", 13)(49, \"div\", 14)(50, \"div\", 15)(51, \"div\", 9)(52, \"div\", 24)(53, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function ConvertorComponent_Template_button_click_53_listener() {\n        return ctx.convertCurrency();\n      });\n      i0.ɵɵtext(54, \"Convert\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(55, \"div\", 13)(56, \"div\", 14)(57, \"div\", 15)(58, \"div\", 9)(59, \"div\", 16);\n      i0.ɵɵtext(60, \" Amount\");\n      i0.ɵɵelement(61, \"i\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(62, \"div\", 9)(63, \"div\", 18)(64, \"div\", 26)(65, \"div\", 27)(66, \"div\", 28)(67, \"p\", 29);\n      i0.ɵɵtext(68);\n      i0.ɵɵelementEnd()()()()()()()()()()()()()()()()();\n      i0.ɵɵelementStart(69, \"div\", 3)(70, \"div\", 30)(71, \"div\", 31)(72, \"div\", 32)(73, \"div\", 7)(74, \"h4\", 33);\n      i0.ɵɵtext(75, \"Live USD Currency Pairs Table\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(76, \"div\", 34)(77, \"div\", 35)(78, \"table\", 36)(79, \"thead\", 37)(80, \"tr\")(81, \"th\");\n      i0.ɵɵtext(82, \"Currency Pair\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(83, \"th\");\n      i0.ɵɵtext(84, \"Exchange Rate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(85, \"tbody\", 38);\n      i0.ɵɵelementStart(86, \"tfoot\")(87, \"tr\")(88, \"th\");\n      i0.ɵɵtext(89, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(90, \"th\");\n      i0.ɵɵtext(91, \"Currency Pair\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(92, \"th\");\n      i0.ɵɵtext(93, \"Exchange Rate\");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(94, \"div\", 39)(95, \"div\", 31)(96, \"div\", 6)(97, \"div\", 7)(98, \"h4\", 33);\n      i0.ɵɵtext(99, \"USD Currency Pairs Exchange Rates\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(100, \"div\", 40)(101, \"div\", 3)(102, \"div\", 41)(103, \"label\", 42);\n      i0.ɵɵtext(104, \"Select up to 15 Currency Pairs: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(105, \"select\", 43);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(106, \"div\", 44)(107, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function ConvertorComponent_Template_button_click_107_listener() {\n        return ctx.updateChart();\n      });\n      i0.ɵɵtext(108, \"Update Chart\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(109, \"div\", 45);\n      i0.ɵɵelement(110, \"canvas\", 46, 47);\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.convertorForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isShowHeader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isShowHeader);\n      i0.ɵɵadvance(66);\n      i0.ɵɵtextInterpolate(ctx.convertedAmount);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.FormGroupDirective, i2.FormControlName, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb252ZXJ0b3IuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ChangeDetectorRef","ElementRef","Chart","registerables","i0","ConvertorComponent","constructor","http","formBuilder","cdr","ngOnInit","convertorForm","group","sourceCurrency","destinationCurrency","amount","fetchCurrencyRates","then","currencyRates","initCurrencyDropdowns","updateTable","IsShowHeader","item","isShowHeader","ngAfterViewInit","updateChart","detectChanges","apiKey","baseCurrency","apiUrl","get","toPromise","data","result","conversion_rates","console","error","catch","currencyCodes","Object","keys","sourceCurrencySelect","document","getElementById","destinationCurrencySelect","currencyCode","option","createElement","value","textContent","toUpperCase","appendChild","cloneNode","currencyPairSelect","currency","defaultSelectedCurrencies","forEach","querySelector","selected","convertCurrency","controls","parseFloat","isNaN","convertedAmount","calculateConvertedAmount","toFixed","alert","generateRandomColors","count","colors","i","color","getRandomNumber","push","min","max","Math","floor","random","register","selectedOptions","selectedCurrencies","Array","from","map","labels","exchangeRates","chart","datasets","backgroundColor","length","update","exchangeRateChartCanvas","nativeElement","type","label","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","plugins","legend","display","response","fetch","json","rates","tableBody","innerHTML","exchangeRate","row","currencyPairCell","exchangeRateCell","onChangeSourceCurrency","onChangeDestinationCurrency","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\SMTracker\\Angular\\StockTracker-main\\src\\app\\convertor\\convertor.component.ts","C:\\Users\\HP\\Desktop\\SMTracker\\Angular\\StockTracker-main\\src\\app\\convertor\\convertor.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Chart, registerables } from 'chart.js';\n//import { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\n\n@Component({\n  selector: 'app-convertor',\n  templateUrl: './convertor.component.html',\n  styleUrls: ['./convertor.component.scss']\n})\nexport class ConvertorComponent implements OnInit, AfterViewInit {\n  @ViewChild('exchangeRateChartCanvas') exchangeRateChartCanvas: ElementRef<HTMLCanvasElement>;\n  @Input() isShowHeader: boolean = true;\n  chart: Chart;\n  convertorForm: FormGroup;\n  sourceCurrencySelect: any;\n  destinationCurrencySelect: any;\n  tableBody: any;\n  convertedAmount: string;\n  constructor(private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.convertorForm = this.formBuilder.group({\n      sourceCurrency: ['USD'],\n      destinationCurrency: ['USD'],\n      amount: ['']\n    });\n\n    this.fetchCurrencyRates().then(currencyRates => {\n      this.initCurrencyDropdowns(currencyRates);\n    });\n\n    this.updateTable();\n  }\n\n  IsShowHeader(item: boolean) {\n    this.isShowHeader = item;\n  }\n\n\n  ngAfterViewInit() {\n    this.updateChart();\n    this.cdr.detectChanges();\n  }\n\n\n  fetchCurrencyRates(): Promise<any> {\n    const apiKey = '2d60540e9c37102c0f5d56ac';\n    const baseCurrency = 'USD';\n    const apiUrl = `https://v6.exchangerate-api.com/v6/${apiKey}/latest/${baseCurrency}`;\n\n    return this.http.get(apiUrl).toPromise()\n      .then((data: any) => {\n        if (data.result === 'success') {\n          return data.conversion_rates;\n        } else {\n          console.error('API Error:', data['error-type']);\n          return {};\n        }\n      })\n      .catch(error => {\n        console.error('Fetch Error:', error);\n        return {};\n      });\n  }\n\n  initCurrencyDropdowns(currencyRates: any): void {\n    const currencyCodes = Object.keys(currencyRates);\n    this.sourceCurrencySelect = document.getElementById('sourceCurrency');\n    this.destinationCurrencySelect = document.getElementById('destinationCurrency');\n\n    for (const currencyCode of currencyCodes) {\n      const option = document.createElement('option');\n      option.value = currencyCode;\n      option.textContent = currencyCode.toUpperCase();\n      this.sourceCurrencySelect?.appendChild(option);\n      this.destinationCurrencySelect?.appendChild(option.cloneNode(true));\n    }\n\n    // Fill the dropdown menu with currency options for the chart\n    const currencyPairSelect = document.getElementById('currencyPairSelect') as HTMLSelectElement;\n    for (const currency of currencyCodes) {\n      const option = document.createElement('option');\n      option.value = currency;\n      option.textContent = currency.toUpperCase();\n      currencyPairSelect.appendChild(option);\n    }\n\n    // Get the default selected currency pairs for the chart\n    const defaultSelectedCurrencies = ['eur', 'gbp', 'jpy', 'aud', 'cad', 'chf', 'cny', 'sek', 'nzd', 'mxn', 'sgd', 'hkd', 'nok', 'krw', 'try'];\n\n    // Split the default selected currencies and set them as selected in the currencyPairSelect element\n    defaultSelectedCurrencies.forEach(currency => {\n      const option = currencyPairSelect.querySelector(`option[value=\"${currency}\"]`) as HTMLOptionElement;\n      if (option) {\n        option.selected = true;\n      }\n    });\n\n    // Update the chart on DOM load\n    this.updateChart();\n  }\n\n\n  convertCurrency(): void {\n    const sourceCurrency = this.convertorForm.controls['sourceCurrency'].value;\n    const destinationCurrency = this.convertorForm.controls['destinationCurrency'].value;\n    const amount = parseFloat(this.convertorForm.controls['amount'].value);\n\n    if (!isNaN(amount)) {\n      this.fetchCurrencyRates().then(currencyRates => {\n        const convertedAmount = this.calculateConvertedAmount(amount, sourceCurrency, destinationCurrency, currencyRates);\n        this.convertedAmount = `${amount} ${sourceCurrency.toUpperCase()} = ${convertedAmount.toFixed(2)} ${destinationCurrency.toUpperCase()}`\n      });\n    } else {\n      alert('Please enter a valid amount.');\n    }\n  }\n\n  calculateConvertedAmount(amount: number, sourceCurrency: string, destinationCurrency: string, currencyRates: any): number {\n    const baseCurrency = 'USD';\n    if (sourceCurrency === baseCurrency) {\n      return amount * currencyRates[destinationCurrency];\n    } else if (destinationCurrency === baseCurrency) {\n      return amount / currencyRates[sourceCurrency];\n    } else {\n      return (amount / currencyRates[sourceCurrency]) * currencyRates[destinationCurrency];\n    }\n  }\n\n  generateRandomColors(count: number): string[] {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const color = `rgba(${this.getRandomNumber(0, 255)}, ${this.getRandomNumber(0, 255)}, ${this.getRandomNumber(0, 255)}, 0.7)`;\n      colors.push(color);\n    }\n    return colors;\n  }\n\n  getRandomNumber(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  updateChart(): void {\n    Chart.register(...registerables);\n    const currencyPairSelect = document.getElementById('currencyPairSelect') as HTMLSelectElement;\n    const selectedOptions = currencyPairSelect.selectedOptions;\n    const selectedCurrencies = Array.from(selectedOptions).map(option => option.value);\n\n    this.fetchCurrencyRates().then(currencyRates => {\n      // Get the selected currency pairs and their exchange rates\n      const labels = selectedCurrencies.map(currency => currency.toUpperCase());\n      const exchangeRates = selectedCurrencies.map(currency => currencyRates[currency]);\n\n      // Create the chart or update the existing one\n    //  const ctx = this.exchangeRateChartCanvas.nativeElement.getContext('2d');\n      if (this.chart) {\n        this.chart.data.labels = labels;\n        this.chart.data.datasets[0].data = exchangeRates;\n        this.chart.data.datasets[0].backgroundColor = this.generateRandomColors(selectedCurrencies.length);\n        this.chart.update();\n      } else {\n        const colors = this.generateRandomColors(labels.length);\n        this.chart = new Chart(this.exchangeRateChartCanvas?.nativeElement, {\n          type: 'bar',\n          data: {\n            labels: labels,\n            datasets: [{\n              label: 'Exchange Rates',\n              data: exchangeRates,\n              backgroundColor: colors,\n              borderWidth: 1,\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                type: 'linear',\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                display: false,\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  async updateTable() {\n    const apiKey = '2d60540e9c37102c0f5d56ac';\n    const baseCurrency = 'USD';\n    const apiUrl = `https://v6.exchangerate-api.com/v6/${apiKey}/latest/${baseCurrency}`;\n\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n\n      if (data.result === 'success') {\n        const rates = data.conversion_rates;\n        this.tableBody = document.getElementById('exchangeRateTable');\n\n        // Clear existing table data\n        this.tableBody.innerHTML = '';\n\n        // Loop through all currency pairs and add rows to the table\n        for (const currency in rates) {\n          const exchangeRate = rates[currency];\n          const row = document.createElement('tr');\n          const currencyPairCell = document.createElement('td');\n          const exchangeRateCell = document.createElement('td');\n\n          currencyPairCell.textContent = `USD/${currency}`;\n          exchangeRateCell.textContent = exchangeRate.toFixed(4);\n\n          row.appendChild(currencyPairCell);\n          row.appendChild(exchangeRateCell);\n          this.tableBody.appendChild(row);\n        }\n      } else {\n        console.error('API Error:', data['error-type']);\n      }\n    } catch (error) {\n      console.error('Fetch Error:', error);\n    }\n  }\n\n  onChangeSourceCurrency() {\n    this.convertCurrency();\n  }\n\n  onChangeDestinationCurrency() {\n    this.convertCurrency();\n  }\n}\n","  <form class=\"form-horizontal\" [formGroup]=\"convertorForm\" novalidate>\n      <!-- begin row -->\n      <div class=\"row\" *ngIf=\"isShowHeader\">\n        <div class=\"col-md-12 m-b-30\">\n          <!-- begin page title -->\n          <div class=\"d-block d-sm-flex flex-nowrap align-items-center\">\n            <div class=\"page-title mb-2 mb-sm-0\">\n              <h1>Currency Converter Dashboard</h1>\n            </div>\n          </div>\n          <!-- end page title -->\n        </div>\n      </div>\n      <!-- end row -->\n      <!-- start Crypto Currency contant -->\n      <div class=\"row crypto-currency\" *ngIf=\"isShowHeader\">\n        <div class=\"col-12\">\n          <div class=\"card card-statistics p-0 owl-wrapper\">\n            <div class=\"row align-items-center no-gutters\">\n              <div class=\"col-xs-12 text-center text-xxl-left bg-primary px-3 py-3\" style=\"text-align: center;\">\n                <span class=\"text-white\">Exchange Rate Monitor and Currency Converter Dashboard</span>\n                <span class=\"badge badge-light-inverse ml-xxl-4\">USD Pair</span>\n              </div>\n              <div class=\"col-xs-1 py-3 py-xs-0\">\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"card card-statistics\">\n            <div class=\"card-header\">\n              <div class=\"card-heading\">\n                <h4 class=\"card-title\" style=\"text-align: center;\">Currency Converter</h4>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"card card-statistics mail-contant\">\n                  <div class=\"card-body p-0\">\n                    <div class=\"row no-gutters\">\n                      <div class=\"col-md-3 col-xxl-2 col-md-3\">\n                        <div class=\"mail-sidebar\">\n                          <div class=\"row justify-content-center\">\n                            <div class=\"col-12\">\n                              <div class=\"text-center mail-sidebar-title px-4\">\n                                Source Currency<i class=\"fa fa-money pl-2\"></i>\n                              </div>\n                            </div>\n                            <div class=\"col-12\">\n                              <div class=\"px-4 py-4\">\n                                <!--<div class=\"card card-statistics h-100 mb-0 o-hidden\">\n                                  <div class=\"card-header d-flex justify-content-between\">-->\n                                    <div class=\"dropdown\">\n                                      <select id=\"sourceCurrency\" formControlName=\"sourceCurrency\" (change)=\"onChangeSourceCurrency()\" class=\"form-control\"></select>\n                                    </div>\n                                  <!--</div>\n                                </div>-->\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3 col-xxl-2 col-md-3\">\n                        <div class=\"mail-sidebar\">\n                          <div class=\"row justify-content-center\">\n                            <div class=\"col-12\">\n                              <div class=\"text-center mail-sidebar-title px-4\">\n                                Amount <i class=\"fa fa-money pl-2\"></i>\n                              </div>\n                            </div>\n                            <div class=\"col-12\">\n                              <div class=\"px-4 py-4\">\n                                  <div class=\"form-group\">\n                                    <input type=\"Number\" class=\"form-control\" id=\"amount\" min=\"0\" step=\"0.01\" placeholder=\"Enter Amount\" formControlName=\"amount\">\n                                  </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3 col-xxl-2 col-md-3\">\n                        <div class=\"mail-sidebar\">\n                          <div class=\"row justify-content-center\">\n                            <div class=\"col-12\">\n                              <div class=\"text-center mail-sidebar-title px-4\">\n                                Target Currency <i class=\"fa fa-money pl-2\"></i>\n                              </div>\n                            </div>\n                            <div class=\"col-12\">\n                              <div class=\"px-4 py-4\">\n                                <!--<div class=\"card card-statistics h-100 mb-0 o-hidden\">\n                                  <div class=\"card-header d-flex justify-content-between\">-->\n                                    <div class=\"dropdown\">\n                                      <select id=\"destinationCurrency\" formControlName=\"destinationCurrency\" (change)=\"onChangeDestinationCurrency()\" class=\"form-control\"></select>\n                                    </div>\n                                  <!--</div>\n                                </div>-->\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3 col-xxl-2 col-md-3\">\n                        <div class=\"mail-sidebar\">\n                          <div class=\"row justify-content-center\">\n                            <div class=\"col-12\">\n                              <div class=\"px-4 py-4\" style=\"text-align: center; margin-top: 30px;\">\n                                <button (click)=\"convertCurrency()\" class=\"btn btn-primary\">Convert</button>\n\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3 col-xxl-2 col-md-3\">\n                        <div class=\"mail-sidebar\">\n                          <div class=\"row justify-content-center\">\n                            <div class=\"col-12\">\n                              <div class=\"text-center mail-sidebar-title px-4\">\n                                Amount<i class=\"fa fa-money pl-2\"></i>\n                              </div>\n                            </div>\n                            <div class=\"col-12\">\n                              <div class=\"px-4 py-4\">\n                                <div class=\"card card-statistics h-100 m-b-0\">\n                                  <div class=\"card-header bg-gradient\">\n                                    <div class=\"row align-items-center\" style=\"justify-content:center;\">\n                                      <p id=\"convertedAmount\" style=\"color: white;\">{{convertedAmount}}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xxl-4 m-b-30\">\n          <div class=\"card card-statistics h-100 mb-0\">\n            <div class=\"card-header d-flex align-items-center justify-content-between\">\n              <div class=\"card-heading\">\n                <h4 class=\"card-title\">Live USD Currency Pairs Table</h4>\n              </div>\n            </div>\n            <div class=\"card-body scrollbar scroll_dark pt-0\">\n              <div class=\"datatable-wrapper table-responsive\" style=\"max-height: 450px;margin-top:10px\">\n                <table id=\"export-table\" class=\"table table-bordered\">\n                  <thead class=\"thead-light\">\n                    <tr>\n                      <th>Currency Pair</th>\n                      <th>Exchange Rate</th>\n                    </tr>\n                  </thead>\n                  <tbody id=\"exchangeRateTable\">\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <th>#</th>\n                      <th>Currency Pair</th>\n                      <th>Exchange Rate</th>\n                    </tr>\n                  </tfoot>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-xxl-8 m-b-30\">\n          <div class=\"card card-statistics h-100 mb-0\">\n            <div class=\"card-header\">\n              <div class=\"card-heading\">\n                <h4 class=\"card-title\">USD Currency Pairs Exchange Rates</h4>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <label for=\"currencyPairSelect\">Select up to 15 Currency Pairs: </label>\n                  <select id=\"currencyPairSelect\" multiple style=\"width: 300px;\" class=\"form-control\">\n                    <!-- Add options dynamically through JavaScript -->\n                  </select>\n                </div>\n                <div class=\"col-6\" style=\"margin-bottom:0\">\n                  <button (click)=\"updateChart()\" class=\"btn btn-primary\">Update Chart</button>\n                </div>\n              </div>\n              <div class=\"row\" style=\"width: 100%; margin-top: 20px\">\n                <canvas #exchangeRateChartCanvas id=\"exchangeRateChartCanvas\" width=\"600\" height=\"300\"></canvas>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n\n"]},"metadata":{},"sourceType":"module"}