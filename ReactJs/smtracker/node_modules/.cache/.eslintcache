[{"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Pages\\Index.js":"4","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Pages\\Converter.js":"5","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Pages\\Stock.js":"6","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\SideBar.js":"7","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\Header.js":"8","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\CurrencyConverter.js":"9","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\MajorLoser.js":"10","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\CryptoConverter.js":"11","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\MajorGainer.js":"12","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\Loader.jsx":"13","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\utils\\dataObj.js":"14"},{"size":535,"mtime":1690148894000,"results":"15","hashOfConfig":"16"},{"size":575,"mtime":1690152422000,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1690148894000,"results":"18","hashOfConfig":"16"},{"size":5978,"mtime":1690578962000,"results":"19","hashOfConfig":"16"},{"size":2645,"mtime":1690579268000,"results":"20","hashOfConfig":"16"},{"size":2560,"mtime":1690579239000,"results":"21","hashOfConfig":"16"},{"size":1448,"mtime":1690152474000,"results":"22","hashOfConfig":"16"},{"size":2299,"mtime":1692019082491,"results":"23","hashOfConfig":"16"},{"size":19970,"mtime":1692030233440,"results":"24","hashOfConfig":"16"},{"size":5277,"mtime":1692033680056,"results":"25","hashOfConfig":"16"},{"size":7809,"mtime":1692030358492,"results":"26","hashOfConfig":"16"},{"size":5319,"mtime":1692033682339,"results":"27","hashOfConfig":"16"},{"size":440,"mtime":1690385543000,"results":"28","hashOfConfig":"16"},{"size":5108,"mtime":1690362142000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"olcckr",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\index.js",[],[],"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\App.js",[],[],"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\reportWebVitals.js",[],[],"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Pages\\Index.js",["79","80","81"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Components/Header\";\nimport SideBar from \"../Components/SideBar\";\nimport CryptoConverter from \"../Components/CryptoConverter\";\nimport Loader from \"../Components/Loader\";\nimport MajorGainer from \"../Components/MajorGainer\";\nimport MajorLoser from \"../Components/MajorLoser\";\nimport CurrencyConverter from \"../Components/CurrencyConverter\";\nimport circleGiff from \"../assets/images/circle.gif\"\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst Index = () => {\n    const [loading, setLoading] = useState(false);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isAutoOpen, setIsAutoOpen] = useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const toggleAutoModal = () => {\n        setIsAutoOpen(!isAutoOpen);\n        // Set a timeout to close the modal after 5 seconds\n        if (!isAutoOpen) {\n            setTimeout(() => {\n                setIsAutoOpen(false);\n            }, 5000);\n        }\n    };\n\n    const handleButtonClick = async () => {\n        setLoading(true)\n        try {\n            const response = await axios.get('https://api.ipify.org?format=json');\n            const ipAddress = response.data.ip;\n            showIPAddress(ipAddress);\n            setLoading(false)\n            setIsOpen(false)\n\n        } catch (error) {\n            console.error('Error fetching IP address:', error);\n        }\n    };\n    const showIPAddress = (ipAddress) => {\n        swal('Your IP Address', ipAddress, 'success');\n    };\n\n    return (\n        <>\n            <div className=\"app-wrap\">\n                <Header />\n                <div className=\"app-container\">\n                <SideBar />\n                <div className=\"app-main\" id=\"main\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 m-b-30\">\n                                    <div className=\"d-block d-sm-flex flex-nowrap align-items-center\">\n                                        <div className=\"page-title mb-2 mb-sm-0\">\n                                            <h1>Stock Tracker and Currency Converter Dashboard</h1>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <CryptoConverter />\n\n                            <MajorGainer />\n\n                             <MajorLoser />\n\n\n                           <CurrencyConverter />\n\n                            <div className=\"row sweet-wrapper\">\n                                <div className=\"col-md-6 mb-30\">\n                                    <div className=\"card card-statistics mb-30\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Auto Close Timer</h5>\n                                            <button onClick={toggleAutoModal} className=\"btn btn-primary\"\n                                                    aria-label=\"Try me! Example: A message with auto close timer\">Try\n                                                me!\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 mb-30\">\n                                    <div className=\"card card-statistics\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\"> Public IP Request </h5>\n                                            <button onClick={toggleModal} className=\"btn btn-primary\"\n                                                    aria-label=\"Try me! Example: Dynamic queue\">\n                                                {loading ? <Loader /> : 'Fetch IP'}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <div>\n                        {isAutoOpen && (\n                            <div className=\"modals\">\n                                <div className=\"modals-content\">\n\n                                    <h3>Auto Close Alert !</h3>\n                                    <p className='mt-2'>I will close in 5 seconds</p>\n\n                                            <img style={{width: '60px', height:'60px', marginTop:'15px'}} src={circleGiff} />\n\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div>\n                        {isOpen && (\n                            <div className=\"modals\">\n                                <div className=\"modals-content\">\n                                    <h3>Your Public IP</h3>\n                                    <p>\n                                        {\n                                            loading &&\n                                            <img style={{width: '60px', height:'60px'}} src={circleGiff} />\n                                        }\n                                    </p>\n                                    <button onClick={handleButtonClick} className=\"btn btn-success mt-3\"\n                                            aria-label=\"Show My Public IP\">\n                                        { 'Show My Public IP'}\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Index;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Pages\\Converter.js",["82","83","84","85","86","87","88","89","90","91"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Components/Header\";\nimport SideBar from \"../Components/SideBar\";\nimport CryptoConverter from \"../Components/CryptoConverter\";\nimport Loader from \"../Components/Loader\";\nimport MajorGainer from \"../Components/MajorGainer\";\nimport MajorLoser from \"../Components/MajorLoser\";\nimport CurrencyConverter from \"../Components/CurrencyConverter\";\nimport circleGiff from \"../assets/images/circle.gif\"\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst Converter = () => {\n    const [loading, setLoading] = useState(false);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isAutoOpen, setIsAutoOpen] = useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const toggleAutoModal = () => {\n        setIsAutoOpen(!isAutoOpen);\n        // Set a timeout to close the modal after 5 seconds\n        if (!isAutoOpen) {\n            setTimeout(() => {\n                setIsAutoOpen(false);\n            }, 5000);\n        }\n    };\n\n    const handleButtonClick = async () => {\n        setLoading(true)\n        try {\n            const response = await axios.get('https://api.ipify.org?format=json');\n            const ipAddress = response.data.ip;\n            showIPAddress(ipAddress);\n            setLoading(false)\n            setIsOpen(false)\n\n        } catch (error) {\n            console.error('Error fetching IP address:', error);\n        }\n    };\n    const showIPAddress = (ipAddress) => {\n        swal('Your IP Address', ipAddress, 'success');\n    };\n\n    return (\n        <>\n            <div className=\"app-wrap\">\n                <Header />\n                <div className=\"app-container\">\n                    <SideBar />\n                    <div className=\"app-main\" id=\"main\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 m-b-30\">\n                                    <div className=\"d-block d-sm-flex flex-nowrap align-items-center\">\n                                        <div className=\"page-title mb-2 mb-sm-0\">\n                                            <h1>Stock Tracker and Currency Converter Dashboard</h1>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n\n                            <CurrencyConverter />\n\n                          </div>\n\n\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Converter;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Pages\\Stock.js",["92","93","94","95","96"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Components/Header\";\nimport SideBar from \"../Components/SideBar\";\nimport CryptoConverter from \"../Components/CryptoConverter\";\nimport MajorGainer from \"../Components/MajorGainer\";\nimport MajorLoser from \"../Components/MajorLoser\";\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst Stock = () => {\n    const [loading, setLoading] = useState(false);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isAutoOpen, setIsAutoOpen] = useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const toggleAutoModal = () => {\n        setIsAutoOpen(!isAutoOpen);\n        // Set a timeout to close the modal after 5 seconds\n        if (!isAutoOpen) {\n            setTimeout(() => {\n                setIsAutoOpen(false);\n            }, 5000);\n        }\n    };\n\n    const handleButtonClick = async () => {\n        setLoading(true)\n        try {\n            const response = await axios.get('https://api.ipify.org?format=json');\n            const ipAddress = response.data.ip;\n            showIPAddress(ipAddress);\n            setLoading(false)\n            setIsOpen(false)\n\n        } catch (error) {\n            console.error('Error fetching IP address:', error);\n        }\n    };\n    const showIPAddress = (ipAddress) => {\n        swal('Your IP Address', ipAddress, 'success');\n    };\n\n    return (\n        <>\n            <div className=\"app-wrap\">\n                <Header />\n                <div className=\"app-container\">\n                    <SideBar />\n                    <div className=\"app-main\" id=\"main\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 m-b-30\">\n                                    <div className=\"d-block d-sm-flex flex-nowrap align-items-center\">\n                                        <div className=\"page-title mb-2 mb-sm-0\">\n                                            <h1>Stock Tracker and Currency Converter Dashboard</h1>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <CryptoConverter />\n\n                            <MajorGainer />\n\n                            <MajorLoser />\n\n                           </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Stock;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\SideBar.js",["97","98","99"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\n\nconst SideBar = () => {\n\n    return (\n        <>\n            <aside className=\"app-navbar\">\n                <div className=\"sidebar-nav scrollbar scroll_light\">\n                    <ul className=\"metismenu \" id=\"sidebarNav\">\n                        &nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;\n                        <li className=\"active\">\n                            <a href='/'>Overview</a>\n                        </li>\n                        <li className=\"\">\n                            <a href='/stock'>Stocks List</a>\n                        </li>\n                        <li className=\"\">\n                            <a href='/converter'>Currency Converter</a>\n                        </li>\n                        &nbsp;&nbsp;&nbsp;\n                        <li className=\"sidebar-banner p-4 bg-gradient text-center m-3 d-block rounded\">\n                            <h5 className=\"text-white mb-1\">SM Trackr</h5>\n                            <p className=\"font-13 text-white line-20\">Stock Tracker and Currency Converter Dashboard</p>\n                            <a className=\"btn btn-square btn-inverse-light btn-xs d-inline-block mt-2 mb-0\"\n                               href=\"#\"> Tracking Partner</a>\n                        </li>\n                    </ul>\n                </div>\n            </aside>\n        </>\n    );\n};\n\nexport default SideBar;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\Header.js",["100","101","102","103","104"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\n\nconst Header = () => {\n\n    return (\n        <>\n            <header className=\"app-header top-bar\">\n                <nav className=\"navbar navbar-expand-md\">\n                    <div className=\"navbar-header d-flex align-items-center\">\n                        <a href=\"#\" className=\"mobile-toggle\"><i\n                            className=\"ti ti-align-right\"></i></a>\n                        <a className=\"navbar-brand\" href=\"index.html\">\n                            <img src=\"assets/img/logo.png\" className=\"img-fluid logo-desktop\" alt=\"logo\"/>\n                            <img src=\"assets/img/logo.png\" className=\"img-fluid logo-mobile\" alt=\"logo\"/>\n                        </a>\n                    </div>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <i className=\"ti ti-align-left\"></i>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <div className=\"navigation d-flex\">\n                            <ul className=\"navbar-nav nav-left\">\n                                <li className=\"nav-item\">\n                                    <a href=\"#\" className=\"nav-link sidebar-toggle\">\n                                        <i className=\"ti ti-align-right\"></i>\n                                    </a>\n                                </li>\n                                <li className=\"nav-item full-screen d-none d-lg-block\" id=\"btnFullscreen\">\n                                    <a href=\"#\" className=\"nav-link expand\">\n                                        <i className=\"icon-size-fullscreen\"></i>\n                                    </a>\n                                </li>\n                            </ul>\n                            <ul className=\"navbar-nav nav-right ml-auto\">\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n        </>\n    );\n};\n\nexport default Header;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\CurrencyConverter.js",["105"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport Multiselect from 'multiselect-react-dropdown';\nChart.register(...registerables);\n\nconst CurrencyConverter = () => {\n    const [exchangeRates, setExchangeRates] = useState({});\n    const [sourceCurrency, setSourceCurrency] = useState(\"\");\n    const [targetCurrency, setTargetCurrency] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        fetchExchangeRates();\n    }, []);\n\n    const fetchExchangeRates = async () => {\n        const apiKey = '5d8b9157d1c096dd9eb5449d';\n        const baseCurrency = 'USD';\n        try {\n            const response = await axios.get(\n                `https://v6.exchangerate-api.com/v6/${apiKey}/latest/${baseCurrency}`\n            );\n            const { conversion_rates } = response.data;\n            setExchangeRates(conversion_rates);\n        } catch (error) {\n            console.error(\"Error fetching exchange rates:\", error);\n        }\n    };\n\n    const handleCurrencyConversion = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const apiKey = '5d8b9157d1c096dd9eb5449d';\n        try {\n            const response = await axios.get(\n                `https://v6.exchangerate-api.com/v6/${apiKey}/latest/${sourceCurrency}`\n            );\n            const { conversion_rates } = response.data;\n            const conversionRate = conversion_rates[targetCurrency];\n            setResult((parseFloat(amount) * conversionRate).toFixed(2));\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            console.error(\"Error converting currency:\", error);\n        }\n    };\n\n    const [selectedOptions, setSelectedOptions] = useState([]);\n    const [updateClick, setUpdateClick] = useState(false);\n\n\n\n    const options = Object.entries(exchangeRates).map(([currency, rate]) => ({\n        key: currency,\n        value: rate,\n    }));\n\n    const onSelect = (selectedList, selectedItem) => {\n        setSelectedOptions(selectedList);\n    };\n\n    const onRemove = (selectedList, removedItem) => {\n        setSelectedOptions(selectedList);\n    };\n\n\n    const colors = [\n        'rgba(0, 128, 0, 1)',\n        'rgba(255, 99, 71, 0.8)',\n        'rgba(255, 0, 0, 1)',\n        'rgba(128, 0, 128, 1)',\n        'rgba(0, 0, 0, 1)',\n        'rgba(54, 162, 235, 0.6)',\n        // Add more colors as needed\n    ];\n\n\n    const chartDataMultiSelect = {\n        labels: updateClick && selectedOptions.map(option => option.key),\n        datasets: [\n            {\n                label: 'Exchange Rates',\n                backgroundColor: colors,\n                borderColor: 'rgba(75,192,192,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.8)',\n                hoverBorderColor: 'rgba(75,192,192,1)',\n                data: updateClick && selectedOptions.map(option => option.value),\n            },\n        ],\n    };\n\n    const chartOptions = {\n        responsive: true,\n        scales: {\n            y: {\n                beginAtZero: true,\n            },\n        },\n    };\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div className=\"card card-statistics\">\n                        <div className=\"card-header\">\n                            <div className=\"card-heading\">\n                                <h4 className=\"card-title\" style={{textAlign:'center'}}>Currency\n                                    Converter</h4>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"card card-statistics mail-contant\">\n                                    <div className=\"card-body p-0\">\n                                        <form\n                                            onSubmit={handleCurrencyConversion}\n                                        >\n                                            <div className=\"row no-gutters\">\n                                                <div className=\"col-md-3 col-xxl-2 col-md-3\">\n                                                    <div className=\"mail-sidebar\">\n                                                        <div className=\"row justify-content-center\">\n                                                            <div className=\"col-12\">\n                                                                <div\n                                                                    className=\"text-center mail-sidebar-title px-4\">\n                                                                    Source Currency<i\n                                                                    className=\"fa fa-money pl-2\"></i>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <div className=\"px-4 py-4\">\n                                                                    <div\n                                                                        className=\"card card-statistics h-100 mb-0 o-hidden\">\n\n                                                                        <select\n                                                                            className=\"form-control form-border form-search mr-2 mb-3 mb-md-0\"\n                                                                            value={sourceCurrency}\n                                                                            onChange={(e) => setSourceCurrency(e.target.value)}\n                                                                        >\n                                                                            <option value=\"\">Select currency</option>\n                                                                            {Object.keys(exchangeRates).map((currency) => (\n                                                                                <option key={currency} value={currency}>\n                                                                                    {currency}\n                                                                                </option>\n                                                                            ))}\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-3 col-xxl-2 col-md-3\">\n                                                    <div className=\"mail-sidebar\">\n                                                        <div className=\"row justify-content-center\">\n                                                            <div className=\"col-12\">\n                                                                <div\n                                                                    className=\"text-center mail-sidebar-title px-4\">\n                                                                    Amount <i\n                                                                    className=\"fa fa-money pl-2\"></i>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <div className=\"px-4 py-4\">\n                                                                    <form>\n                                                                        <div className=\"form-group\">\n                                                                            <input\n                                                                                className=\"form-control\"\n                                                                                id=\"amount\" min=\"0\"\n                                                                                step=\"0.01\"\n                                                                                type=\"number\"\n                                                                                value={amount}\n                                                                                onChange={(e) => setAmount(e.target.value)}\n                                                                                placeholder=\"Enter Amount\" />\n                                                                        </div>\n                                                                    </form>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-3 col-xxl-2 col-md-3\">\n                                                    <div className=\"mail-sidebar\">\n                                                        <div className=\"row justify-content-center\">\n                                                            <div className=\"col-12\">\n                                                                <div\n                                                                    className=\"text-center mail-sidebar-title px-4\">\n                                                                    Target Currency <i\n                                                                    className=\"fa fa-money pl-2\"></i>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <div className=\"px-4 py-4\">\n                                                                    <div\n                                                                        className=\"card card-statistics h-100 mb-0 o-hidden\">\n                                                                        <select\n                                                                            className=\"form-control form-border form-search mr-2 mb-3 mb-md-0\"\n                                                                            value={targetCurrency}\n                                                                            onChange={(e) => setTargetCurrency(e.target.value)}\n                                                                        >\n                                                                            <option value=\"\">Select currency</option>\n                                                                            {Object.keys(exchangeRates).map((currency) => (\n                                                                                <option key={currency} value={currency}>\n                                                                                    {currency}\n                                                                                </option>\n                                                                            ))}\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-3 col-xxl-2 col-md-3\">\n                                                    <div className=\"mail-sidebar\">\n                                                        <div className=\"row justify-content-center\">\n                                                            <div className=\"col-12\">\n                                                                <div className=\"px-4 py-4\"\n                                                                     style={{textAlign:'center', marginTop:'30px'}}>\n                                                                    <button type='submit'\n                                                                            className=\"btn btn-primary\">Convert\n                                                                    </button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-3 col-xxl-2 col-md-3\">\n                                                    <div className=\"mail-sidebar\">\n                                                        <div className=\"row justify-content-center\">\n                                                            <div className=\"col-12\">\n                                                                <div\n                                                                    className=\"text-center mail-sidebar-title px-4\">\n                                                                    Amount<i\n                                                                    className=\"fa fa-money pl-2\"></i>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <div className=\"px-4 py-4\">\n                                                                    <div\n                                                                        className=\"card card-statistics h-100 m-b-0\">\n                                                                        <div\n                                                                            className=\"card-header bg-gradient\">\n                                                                            <div\n                                                                                className=\"row align-items-center\"\n                                                                                style={{justifyContent:'center'}}>\n                                                                                <p\n                                                                                    style={{color:'white'}}>                       {result} {targetCurrency}\n                                                                                </p>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"row\">\n                <div className=\"col-xxl-4 m-b-30\">\n                    <div className=\"card card-statistics h-100 mb-0\">\n                        <div className=\"card-header d-flex align-items-center justify-content-between\">\n                            <div className=\"card-heading\">\n                                <h4 className=\"card-title\">Live USD Currency Pairs Table</h4>\n                            </div>\n                        </div>\n                        <div className=\"card-body scrollbar scroll_dark pt-0\"\n                             style={{maxHeight:'350px'}}>\n                            <div className=\"datatable-wrapper table-responsive\">\n                                <table id=\"export-table\" className=\"table table-bordered\">\n                                    <thead className=\"thead-light\">\n                                    <tr>\n                                        <th>Currency Pair</th>\n                                        <th>Exchange Rate</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {Object.entries(exchangeRates).map(([currency, rate]) => (\n                                        <tr key={currency}>\n                                            <td>{`USD/${currency}`}</td>\n                                            <td>{rate.toFixed(4)}</td>\n                                        </tr>\n                                    ))}\n\n                                    </tbody>\n\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xxl-8 m-b-30\">\n                    <div className=\"card card-statistics\">\n                        <div className=\"card-header\">\n                            <div className=\"card-heading\">\n                                <h4 className=\"card-title\">USD Currency Pairs Exchange Rates</h4>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <label htmlFor=\"currencyPairSelect\">Select up to 15 Currency\n                                Pairs: </label>\n                            <div className=\"d-flex\">\n\n                                <Multiselect\n                                    options={options}\n                                    displayValue=\"value\"\n                                    onSelect={onSelect}\n                                    onRemove={onRemove}\n                                    selectedValues={selectedOptions}\n                                    placeholder=\"Select options\"\n                                />\n                                <button className=\"btn btn-primary ml-3\" onClick={() => setUpdateClick(true)}>Update Chart</button>\n                            </div>\n                            <div style={{width:'600px'}}>\n                                return <Bar data={chartDataMultiSelect} options={chartOptions} />;\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default CurrencyConverter;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\MajorLoser.js",["106","107","108"],[],"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\CryptoConverter.js",["109","110","111","112","113","114","115","116"],[],"\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { companyC } from \"../utils/dataObj\";\nimport Select from \"react-select\";\nimport Plot from 'react-plotly.js'\n\n\n\nconst CryptoConverter = () => {\n    const [stockChartXValues, setStockChartXValues] = useState([]);\n    const [stockChartYValues, setStockChartYValues] = useState([]);\n    const [timeDetail, setTimeDetail] = useState(\"TIME_SERIES_DAILY\");\n    const [historicalData, setHistoricalData] = useState([\n        { label: \"Weekly Chart\", value: \"TIME_SERIES_DAILY\" },\n        { label: \"Monthly Chart\", value: \"TIME_SERIES_WEEKLY_ADJUSTED\" },\n    ]);\n\n    const [currentComp, setCurrentComp] = useState(\"AAPL\");\n    const limit = 15;\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        fetchStock();\n    }, [currentComp, timeDetail]);\n\n    const changeIt = (e) => {\n        setTimeDetail(e.value);\n    };\n\n    const changeCompnay = (e) => {\n        setCurrentComp(e.value);\n    };\n\n    const fetchStock = () => {\n        const API_KEY = \"DOSWKD9L3URZ6BUR\";\n        const headerAP = headerAPIFromTimeDetail(timeDetail);\n        const API_Call = `https://www.alphavantage.co/query?function=${timeDetail}&symbol=${currentComp}&apikey=${API_KEY}`;\n        const stockChartXValuesFunction = [];\n        const stockChartYValuesFunction = [];\n\n        fetch(API_Call)\n            .then((response) => response.json())\n            .then((data) => {\n                for (let key in data[headerAP]) {\n                    stockChartXValuesFunction.push(key);\n                    stockChartYValuesFunction.push(data[headerAP][key][\"1. open\"]);\n                }\n\n                setStockChartXValues(stockChartXValuesFunction);\n                setStockChartYValues(stockChartYValuesFunction);\n            });\n    };\n\n    const handleSubmit = async (e) => {\n        // const email = emaill;\n        const company = currentComp;\n\n        e.preventDefault();\n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/opers/insertW/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                // body: JSON.stringify({ email, company, timeDetail }),\n            });\n\n            if (response.ok) {\n                alert(\"Data Added to WatchList\");\n                console.log(\"watchlist updated\");\n            } else {\n                alert(\"Some Thing went Wrong!\");\n                console.error(\"Error \");\n            }\n        } catch (error) {\n            console.error(\"An error occurred:\", error);\n        }\n    };\n    const addToWatchList = (e) => {\n        // if (isLoggedIn) {\n        //     handleSubmit(e);\n        // } else {\n        //     alert(\"Login to add to watchList!\");\n        // }\n    };\n\n    const headerAPIFromTimeDetail = (timeDetail) => {\n        if (timeDetail === \"TIME_SERIES_WEEKLY_ADJUSTED\") {\n            return \"Weekly Adjusted Time Series\";\n        } else if (timeDetail === \"TIME_SERIES_DAILY\") {\n            return \"Time Series (Daily)\";\n        } else {\n            return \"Monthly Time Series\";\n        }\n    };\n    return (\n        <>\n            <div className=\"row crypto-currency\">\n                <div className=\"col-12\">\n                    <div className=\"card card-statistics p-0 owl-wrapper\">\n                        <div className=\"row align-items-center no-gutters\">\n                            <div className=\"col-xs-11 text-center text-xxl-left bg-primary px-3 py-3\"\n                                 style={{textAlign: 'center'}}>\n                                <span className=\"text-white\">Stock Tracker and Currency Converter Dashboard</span>\n                                <span className=\"badge badge-light-inverse ml-xxl-4\">USD Pair</span>\n                            </div>\n                            <div className=\"col-xs-10 py-3 py-xs-0\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"row\">\n                <div className=\"col-12 col-xxl-8 mb-30\">\n                    <div className=\"card card-statistics h-100 mb-0\">\n                        <div className=\"card-header d-flex justify-content-between\">\n                            <div className=\"card-heading\">\n                                <h4 className=\"card-title\">Stock Overview - Select Stock to Track</h4>\n                            </div>\n                           <div className=\"d-block\">\n                             <div>\n                                 <Select\n                                     className=\"select-option wdth-400\"\n                                     value={companyC?.companyC?.find(\n                                         (option) => option.value === currentComp\n                                     )}\n                                     options={companyC?.companyC}\n                                     onChange={changeCompnay}\n                                     placeholder=\"Select a stock\"\n                                     isSearchable\n                                 />\n                             </div>\n\n                              <div className=\"mt-3\">\n                                  <Select\n                                      className=\"select-option\"\n                                      value={historicalData.find(\n                                          (option) => option.value === timeDetail\n                                      )}\n                                      options={historicalData}\n                                      onChange={changeIt}\n                                      placeholder=\"Select an interval\"\n                                      isSearchable\n                                  />\n                              </div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div className=\"card card-statistics\">\n                        <div className=\"card-header\">\n                            <div className=\"card-heading\">\n                                <h4 className=\"card-title\">Stock Chart</h4>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"chart-container\">\n                                <Plot\n                                    data = {[\n                                        {\n                                            x: stockChartXValues,\n                                            y: stockChartYValues,\n                                            type: 'scatter',\n                                            mode: 'lines+markers',\n                                            marker: {color: 'blue'},\n                                        },\n                                    ]}\n                                    layouts={{\n                                        width: '700px',\n                                        height: 400,\n                                        title: currentComp,\n                                        margin: {\n                                            l: 40,\n                                            r: 40,\n                                            t: 40,\n                                            b: 40,\n                                        },\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default CryptoConverter;","C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\MajorGainer.js",["117","118","119"],[],"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\Components\\Loader.jsx",[],[],"C:\\Users\\HP\\Desktop\\SMTracker\\ReactJs\\smtracker\\src\\utils\\dataObj.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":4,"column":17,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":113,"column":45,"nodeType":"126","endLine":113,"endColumn":126},{"ruleId":"124","severity":1,"message":"125","line":128,"column":45,"nodeType":"126","endLine":128,"endColumn":108},{"ruleId":"120","severity":1,"message":"121","line":4,"column":17,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"120","severity":1,"message":"127","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":23},{"ruleId":"120","severity":1,"message":"128","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"120","severity":1,"message":"129","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":19},{"ruleId":"120","severity":1,"message":"130","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":18},{"ruleId":"120","severity":1,"message":"131","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":18},{"ruleId":"120","severity":1,"message":"132","line":17,"column":12,"nodeType":"122","messageId":"123","endLine":17,"endColumn":19},{"ruleId":"120","severity":1,"message":"133","line":22,"column":11,"nodeType":"122","messageId":"123","endLine":22,"endColumn":22},{"ruleId":"120","severity":1,"message":"134","line":26,"column":11,"nodeType":"122","messageId":"123","endLine":26,"endColumn":26},{"ruleId":"120","severity":1,"message":"135","line":36,"column":11,"nodeType":"122","messageId":"123","endLine":36,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":4,"column":17,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"120","severity":1,"message":"132","line":14,"column":12,"nodeType":"122","messageId":"123","endLine":14,"endColumn":19},{"ruleId":"120","severity":1,"message":"133","line":19,"column":11,"nodeType":"122","messageId":"123","endLine":19,"endColumn":22},{"ruleId":"120","severity":1,"message":"134","line":23,"column":11,"nodeType":"122","messageId":"123","endLine":23,"endColumn":26},{"ruleId":"120","severity":1,"message":"135","line":33,"column":11,"nodeType":"122","messageId":"123","endLine":33,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":4,"column":17,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"120","severity":1,"message":"136","line":4,"column":28,"nodeType":"122","messageId":"123","endLine":4,"endColumn":36},{"ruleId":"137","severity":1,"message":"138","line":28,"column":29,"nodeType":"126","endLine":29,"endColumn":41},{"ruleId":"120","severity":1,"message":"121","line":4,"column":17,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"120","severity":1,"message":"136","line":4,"column":28,"nodeType":"122","messageId":"123","endLine":4,"endColumn":36},{"ruleId":"137","severity":1,"message":"138","line":13,"column":25,"nodeType":"126","endLine":13,"endColumn":63},{"ruleId":"137","severity":1,"message":"138","line":30,"column":37,"nodeType":"126","endLine":30,"endColumn":85},{"ruleId":"137","severity":1,"message":"138","line":35,"column":37,"nodeType":"126","endLine":35,"endColumn":77},{"ruleId":"120","severity":1,"message":"132","line":17,"column":12,"nodeType":"122","messageId":"123","endLine":17,"endColumn":19},{"ruleId":"120","severity":1,"message":"132","line":14,"column":12,"nodeType":"122","messageId":"123","endLine":14,"endColumn":19},{"ruleId":"120","severity":1,"message":"139","line":14,"column":21,"nodeType":"122","messageId":"123","endLine":14,"endColumn":31},{"ruleId":"120","severity":1,"message":"140","line":16,"column":21,"nodeType":"122","messageId":"123","endLine":16,"endColumn":31},{"ruleId":"120","severity":1,"message":"141","line":15,"column":28,"nodeType":"122","messageId":"123","endLine":15,"endColumn":45},{"ruleId":"120","severity":1,"message":"142","line":21,"column":11,"nodeType":"122","messageId":"123","endLine":21,"endColumn":16},{"ruleId":"120","severity":1,"message":"143","line":22,"column":12,"nodeType":"122","messageId":"123","endLine":22,"endColumn":16},{"ruleId":"120","severity":1,"message":"144","line":22,"column":18,"nodeType":"122","messageId":"123","endLine":22,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":26,"column":8,"nodeType":"147","endLine":26,"endColumn":33,"suggestions":"148"},{"ruleId":"120","severity":1,"message":"149","line":56,"column":11,"nodeType":"122","messageId":"123","endLine":56,"endColumn":23},{"ruleId":"120","severity":1,"message":"150","line":58,"column":15,"nodeType":"122","messageId":"123","endLine":58,"endColumn":22},{"ruleId":"120","severity":1,"message":"151","line":81,"column":11,"nodeType":"122","messageId":"123","endLine":81,"endColumn":25},{"ruleId":"120","severity":1,"message":"132","line":14,"column":12,"nodeType":"122","messageId":"123","endLine":14,"endColumn":19},{"ruleId":"120","severity":1,"message":"139","line":14,"column":21,"nodeType":"122","messageId":"123","endLine":14,"endColumn":31},{"ruleId":"120","severity":1,"message":"140","line":16,"column":21,"nodeType":"122","messageId":"123","endLine":16,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CryptoConverter' is defined but never used.","'Loader' is defined but never used.","'MajorGainer' is defined but never used.","'MajorLoser' is defined but never used.","'circleGiff' is defined but never used.","'loading' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'toggleAutoModal' is assigned a value but never used.","'handleButtonClick' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'setLoading' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'setHistoricalData' is assigned a value but never used.","'limit' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchStock'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'handleSubmit' is assigned a value but never used.","'company' is assigned a value but never used.","'addToWatchList' is assigned a value but never used.",{"desc":"153","fix":"154"},"Update the dependencies array to be: [currentComp, fetchStock, timeDetail]",{"range":"155","text":"156"},[806,831],"[currentComp, fetchStock, timeDetail]"]